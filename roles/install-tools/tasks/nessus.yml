---
- name: "Check if Nessus is installed"
  tags: dev
  shell: "systemctl --all --type service | grep -q nessusd"
  register: nessus_installed
  failed_when: "nessus_installed.rc == 2"
  check_mode: no
  changed_when: false

#Init to user does not exist
- set_fact: nessus_user_exists_stdout="0"

- name: "Check if Nessus user exists"
  tags: dev
  shell: "/opt/nessus/sbin/nessuscli lsuser | wc -l"
  register: nessus_user_exists
  become: true
  check_mode: no
  when: "nessus_installed.rc == 0"
  changed_when: false

# If nessus installed and user exists, set fact to stdout
- set_fact: nessus_user_exists_stdout="{{nessus_user_exists.stdout}}"
  when: "nessus_installed.rc == 0"

- name: "Install latest Nessus"
  apt:
    deb: https://www.tenable.com/downloads/api/v2/pages/nessus/files/Nessus-latest-debian10_amd64.deb
  become: true
  become_method: sudo
  when: nessus_installed.rc == 1

- name: "Register Nessus"
  shell: /opt/nessus/sbin/nessuscli fetch --register '{{NESSUS_KEY}}'
  become: true
  become_method: sudo
  when: nessus_installed.rc == 1

- name: "Enable service nessusd and start it."
  ansible.builtin.systemd:
    name: nessusd
    enabled: true
    state: started
  become: true
  become_method: sudo

- name: "Add user to Nessus"
  ansible.builtin.expect:
    command: /opt/nessus/sbin/nessuscli adduser
    responses:
      (.*)Login:(.*): "{{NESSUS_USER}}"
      (.*)Login password(.*): "{{NESSUS_PASS}}"
      (.*)Login password(.*):': "{{NESSUS_PASS}}"
      (.*)system administrator(.*): "y"
      (.*)rules set(.*): "\n"
      (.*)ok(.*): "y"
  become: true
  become_method: sudo
  when: nessus_user_exists_stdout == "0"
